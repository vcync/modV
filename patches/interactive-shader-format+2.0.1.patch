diff --git a/node_modules/interactive-shader-format/src/ISFRenderer.js b/node_modules/interactive-shader-format/src/ISFRenderer.js
index 77d2171..129ba51 100644
--- a/node_modules/interactive-shader-format/src/ISFRenderer.js
+++ b/node_modules/interactive-shader-format/src/ISFRenderer.js
@@ -196,7 +196,7 @@ ISFRenderer.prototype.paintToScreen = function paintToScreen(
 ) {
   this.paintProgram.use();
   this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, null);
-  this.gl.viewport(0, 0, destination.width, destination.height);
+  // this.gl.viewport(0, 0, destination.width, destination.height);
   const loc = this.paintProgram.getUniformLocation("tex");
   target.readTexture().bind(loc);
   this.gl.drawArrays(this.gl.TRIANGLES, 0, 6);
@@ -467,7 +467,7 @@ ISFRenderer.prototype.draw = function draw(destination) {
       );
       this.setValue("RENDERSIZE", [buffer.width, buffer.height]);
       lastTarget = buffer;
-      this.gl.viewport(0, 0, w, h);
+      // this.gl.viewport(0, 0, w, h);
     } else {
       const renderWidth = destination.width;
       const renderHeight = destination.height;
@@ -475,7 +475,7 @@ ISFRenderer.prototype.draw = function draw(destination) {
       this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, null);
       this.setValue("RENDERSIZE", [renderWidth, renderHeight]);
       lastTarget = null;
-      this.gl.viewport(0, 0, renderWidth, renderHeight);
+      // this.gl.viewport(0, 0, renderWidth, renderHeight);
     }
     this.gl.drawArrays(this.gl.TRIANGLES, 0, 6);
     this.gl.bindTexture(this.gl.TEXTURE_2D, null);
